{"version":3,"sources":["leavepopup.component.ts"],"names":[],"mappings":"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","file":"leavepopup.component.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms'\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../leave/auth.services';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n@Component({\n  selector: 'app-leavepopup',\n  templateUrl: './leavepopup.component.html',\n  styleUrls: ['./leavepopup.component.css']\n})\nexport class LeavepopupComponent {\n\n  constructor(private builder: FormBuilder, private service: AuthService, private toastr: ToastrService,\n    private dialogref: MatDialogRef<LeavepopupComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.service.getuserrole().subscribe(res => {\n      this.rolelist = res;\n    });\n    \n    \n\n  }\n  ngOnInit(): void {\n    if (this.data.usercode != '' && this.data.usercode != null) {\n      this.loaduserdata(this.data.usercode);\n    }\n  }\n  rolelist: any;\n  editdata: any;\n\n  registerform = this.builder.group({\n    id: this.builder.control(''),\n    name: this.builder.control(''),\n    fromdate: this.builder.control(''),\n    todate: this.builder.control(''),\n    email: this.builder.control(''),\n    reason: this.builder.control(''),\n  \n    role: this.builder.control('', Validators.required),\n    // isactive: this.builder.control(false)\n  });\n\n  loaduserdata(code: any) {\n    this.service.GetUserbyCode(code).subscribe(res => {\n      this.editdata = res;\n      console.log(this.editdata);\n      this.registerform.setValue({\n        id: this.editdata.id, \n        name: this.editdata.name,\n        fromdate: this.editdata.fromdate,\n         email: this.editdata.email,\n          reason: this.editdata.reason,\n        role: this.editdata.role,\n        todate: this.editdata.todate,\n       \n        //  isactive: this.editdata.isactive,\n      });\n    });\n  }\n  UpdateUser() {\n    this.service.updateuser(this.registerform.value.id, this.registerform.value).subscribe(res => {\n      this.toastr.success('Updated successfully.');\n      this.dialogref.close();\n    });\n  }\n\n}\n"]}