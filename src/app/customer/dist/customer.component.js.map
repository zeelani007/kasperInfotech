{"version":3,"sources":["customer.component.ts"],"names":[],"mappings":"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","file":"customer.component.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CustomerformComponent } from '../customerform/customerform.component';\r\nimport { CoreService } from '../core.service';\r\nimport { EmployeeService } from '../services/customer.services';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent  {\r\n\r\n  constructor(\r\n    private service: AuthService,\r\n    private toastr:ToastrService,\r\n    private router: Router,\r\n    // private _dialog: MatDialog,\r\n    // private _empService: EmployeeService,\r\n    // private _coreService: CoreService\r\n    ) {\r\n   \r\n    this.SetAccesspermission();\r\n\r\n  }\r\n  customerlist: any;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n\r\n  accessdata: any;\r\n  haveedit = false;\r\n  haveadd = false;\r\n  havedelete = false;\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n  LoadCustomer() {\r\n    this.service.GetAllCustomer().subscribe(res => {\r\n      this.customerlist = res;\r\n      this.dataSource = new MatTableDataSource(this.customerlist);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  SetAccesspermission() {\r\n    this.service.Getaccessbyrole(this.service.getrole(), 'customer').subscribe(res => {\r\n      this.accessdata = res;\r\n      //console.log(this.accessdata);\r\n\r\n      if(this.accessdata.length>0){\r\n        this.haveadd=this.accessdata[0].haveadd;\r\n        this.haveedit=this.accessdata[0].haveedit;\r\n        this.havedelete=this.accessdata[0].havedelete;\r\n        this.LoadCustomer();\r\n      }else{\r\n        alert('you are not authorized to access.');\r\n        this.router.navigate(['']);\r\n      }\r\n\r\n    });\r\n  }\r\n  displayedColumns: string[] = ['id',\r\n  'customerName',\r\n  'mobile',\r\n  'email',\r\n  'adress',\r\n  'type',\r\n  'status',\r\n  'action',];\r\n  \r\n  updatecustomer(code: any) {\r\n\r\n    if(this.haveedit){\r\n       this.toastr.success('Success')\r\n    }else{\r\n      this.toastr.warning(\"You don't have access for Edit\")\r\n    }\r\n\r\n  }\r\n  removecustomer(code: any) {\r\n    if(this.havedelete){\r\n      this.toastr.success('Success')\r\n   }else{\r\n     this.toastr.warning(\"You don't have access for Delete\")\r\n   }\r\n  }\r\n  addcustomer() {\r\n    if(this.haveadd){\r\n      this.toastr.success('Success')\r\n   }else{\r\n     this.toastr.warning(\"You don't have access for Create\")\r\n   }\r\n  }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.getEmployeeList();\r\n  // }\r\n  // openAddEditEmpForm() {\r\n  //   const dialogRef = this._dialog.open(CustomerformComponent);\r\n  //   dialogRef.afterClosed().subscribe({\r\n  //     next: (val) => {\r\n  //       if (val) {\r\n  //         this.getEmployeeList();\r\n  //       }\r\n  //     },\r\n  //   });\r\n  // }\r\n\r\n  // getEmployeeList() {\r\n  //   this._empService.getEmployeeList().subscribe({\r\n  //     next: (res) => {\r\n  //       this.dataSource = new MatTableDataSource(res);\r\n  //       this.dataSource.sort = this.sort;\r\n  //       this.dataSource.paginator = this.paginator;\r\n  //     },\r\n  //     error: console.log,\r\n  //   });\r\n  // }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // deleteEmployee(id: number) {\r\n  //   this._empService.deleteEmployee(id).subscribe({\r\n  //     next: (res) => {\r\n  //       this._coreService.openSnackBar('Employee deleted!', 'done');\r\n  //       this.getEmployeeList();\r\n  //     },\r\n  //     error: console.log,\r\n  //   });\r\n  // }\r\n\r\n  // openEditForm(data: any) {\r\n  //   const dialogRef = this._dialog.open(CustomerformComponent, {\r\n  //     data,\r\n  //   });\r\n\r\n  //   dialogRef.afterClosed().subscribe({\r\n  //     next: (val) => {\r\n  //       if (val) {\r\n  //         this.getEmployeeList();\r\n  //       }\r\n  //     },\r\n  //   });\r\n  // }\r\n}\r\n"]}