{"version":3,"sources":["filter.pipe.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAoD;AAKpD;IAAA;IAeA,CAAC;IAbC,8BAAS,GAAT,UAAU,KAAa,EAAE,YAAoB,EAAE,QAAe;QAC5D,IAAM,MAAM,GAAM,EAAE,CAAC;QACrB,IAAG,CAAC,KAAK,IAAI,YAAY,KAAG,EAAE,IAAI,QAAQ,KAAI,EAAE,EAAC;YAC/C,OAAO,KAAK,CAAC;SACd;QACD,KAAK,CAAC,OAAO,CAAC,UAAC,CAAK;YAClB,IAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,EAAC;gBACvE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAbU,UAAU;QAHtB,WAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;OACW,UAAU,CAetB;IAAD,iBAAC;CAfD,AAeC,IAAA;AAfY,gCAAU","file":"filter.pipe.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(value : any[], filterString: string, propName:string): any[] {\r\n    const result:any =[];\r\n    if(!value || filterString==='' || propName ===''){\r\n      return value;\r\n    }\r\n    value.forEach((a:any)=>{\r\n      if(a[propName].trim().toLowerCase().includes(filterString.toLowerCase())){\r\n        result.push(a);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n}\r\n"]}