{"version":3,"sources":["sidenav.component.ts"],"names":["core_1","require","layout_1","router_1","SidenavComponent","route","breakpointObserver","_this","this","user","mode","uiContent","progrssBarClass","isloading","isadmin","isMenuVisible","console","log","observe","Breakpoints","HandsetLandscape","HandsetPortrait","subscribe","result","matches","prototype","ngOnChanges","navigationInterceptor","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","ngDoCheck","currentroute","url","role","sessionStorage","getItem","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YACA,IAAAA,OAAAC,QAAA,iBACAC,SAAAD,QAAA,uBACAE,SAAAF,QAAA,mBASAG,iBAAA,WAWE,SAAAA,EAEUC,EAEAC,GAJV,IAAAC,EAAAC,KAEUA,KAAAH,MAAAA,EAEAG,KAAAF,mBAAAA,EAdVE,KAAAC,KAAY,KAEZD,KAAAE,KAAO,OACPF,KAAAG,UAAY,UACZH,KAAAI,gBAAkB,eAClBJ,KAAAK,WAAY,EACXL,KAAAM,SAAQ,EACTN,KAAAO,eAAc,EAUZC,QAAQC,IAAI,gBAEZT,KAAKK,WAAY,EAEjBP,EAAmBY,QAAQ,CACzBhB,SAAAiB,YAAYC,iBACZlB,SAAAiB,YAAYE,kBACXC,UAAU,SAAAC,GACXP,QAAQC,IAAIM,GACRA,EAAOC,SAGTjB,EAAKG,KAAO,OACZH,EAAKI,UAAY,mBAIjBJ,EAAKG,KAAO,OACZH,EAAKI,UAAY,aAgFzB,OAtEEP,EAAAqB,UAAAC,YAAA,WACEV,QAAQC,IAAI,iBAyBNb,EAAAqB,UAAAE,sBAAR,SAA8BC,GACxBA,aAAiBzB,SAAA0B,kBACnBrB,KAAMI,gBAAkB,eACxBJ,KAAKK,WAAY,GAEfe,aAAiBzB,SAAA2B,gBACnBtB,KAAMI,gBAAkB,sBACxBJ,KAAKK,WAAY,GAEfe,aAAiBzB,SAAA4B,mBACnBvB,KAAMI,gBAAkB,sBACxBJ,KAAKK,WAAY,GAEfe,aAAiBzB,SAAA6B,kBACnBxB,KAAMI,gBAAkB,sBACxBJ,KAAKK,WAAY,IAYrBT,EAAAqB,UAAAQ,UAAA,WACE,IAAIC,EAAe1B,KAAKH,MAAM8B,IAC1BC,EAAKC,eAAeC,QAAQ,QAE9B9B,KAAKO,cADa,UAAhBmB,GAA4C,aAAhBA,EAO9B1B,KAAKM,QADK,SAARsB,GA5GKhC,EAAgBmC,WAAA,CAL5BvC,OAAAwC,UAAU,CACTC,SAAU,cACVC,YAAa,2BACbC,UAAW,CAAC,8BAEDvC,GAAb,GAAawC,QAAAxC,iBAAAA","file":"sidenav.component.min.js","sourcesContent":["\nimport { Component, OnInit, OnDestroy, OnChanges,DoCheck } from '@angular/core';\nimport { Breakpoints, BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Router,Route, Event, NavigationStart, NavigationEnd, NavigationCancel,ActivatedRoute, NavigationError } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnChanges {\n  user: any = null;\n  // isMobile: boolean;\n  mode = \"side\"\n  uiContent = \"content\"\n  progrssBarClass = \"progress-bar\";\n  isloading = true;\n   isadmin=false;\n  isMenuVisible=false;\n  \n\n  constructor(\n    // private loadingBar: SlimLoadingBarService,\n    private route: Router,\n    // public AuthService: AuthService,\n    private breakpointObserver: BreakpointObserver\n  )\n   {\n    console.log(\" constructor\")\n\n    this.isloading = true;\n\n    breakpointObserver.observe([\n      Breakpoints.HandsetLandscape,\n      Breakpoints.HandsetPortrait\n    ]).subscribe(result => {\n      console.log(result)\n      if (result.matches) {\n        // this.activateHandsetLayout();\n        // this.isMobile = true;\n        this.mode = \"over\"\n        this.uiContent = \"mobile-content\"\n      }\n      else {\n        // this.isMobile = false;\n        this.mode = \"side\"\n        this.uiContent = \"content\"\n      }\n    });\n\n    // this.route.events.subscribe((event: Event) => {\n    //   this.navigationInterceptor(event);\n    // })\n    //   ;\n  }\n\n  ngOnChanges() {\n    console.log(\" ngOnChanges\")\n  }\n\n\n  // ngOnInit(): void {\n  //   console.log(\" ngOnInit\")\n  //   this.user = this.AuthService.getUser();\n  //   this.isloading = false;\n  // }\n\n  // logout(): void {\n  //   // localStorage.removeItem('currentUser');\n  //   this.AuthService.logout()\n  //   this.route.navigate(['login']);\n  // }\n\n\n\n  // isAuth(isAuth?: any) {\n  //   if (isAuth) {\n  //     this.user = this.authService.getUser()\n  //     // this.user = JSON.parse(localStorage.getItem(APP_USER_PROFILE)) || <User>{};\n  //   }\n  // }\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this. progrssBarClass = \"progress-bar\";\n      this.isloading = true;\n    }\n    if (event instanceof NavigationEnd) {\n      this. progrssBarClass = \"progress-bar-hidden\";\n      this.isloading = false;\n    }\n    if (event instanceof NavigationCancel) {\n      this. progrssBarClass = \"progress-bar-hidden\";\n      this.isloading = false;\n    }\n    if (event instanceof NavigationError) {\n      this. progrssBarClass = \"progress-bar-hidden\";\n      this.isloading = false;\n    }\n\n  }\n\n\n  // ngOnDestroy() {\n  //   this.breakpointObserver.ngOnDestroy()\n  //   this.authService.logout()\n  //   //   this.router.events\n  //   // this.breakpoint.\n  // }\n  ngDoCheck(): void {\n    let currentroute = this.route.url;\n    let role=sessionStorage.getItem('role');\n    if (currentroute == '/login' || currentroute == '/register') {\n      this.isMenuVisible = false\n    } else {\n      this.isMenuVisible = true\n    }\n\n    if (role == 'admin') {\n      this.isadmin = true;\n    }else{\n      this.isadmin = false;\n    }\n  }\n\n \n}\n"]}