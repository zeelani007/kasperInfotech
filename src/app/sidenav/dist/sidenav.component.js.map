{"version":3,"sources":["sidenav.component.ts"],"names":[],"mappings":"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","file":"sidenav.component.js","sourcesContent":["\nimport { Component, OnInit, OnDestroy, OnChanges,DoCheck } from '@angular/core';\nimport { Breakpoints, BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Router,Route, Event, NavigationStart, NavigationEnd, NavigationCancel,ActivatedRoute, NavigationError } from '@angular/router';\n// import { AuthService } from '../_services';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnChanges, OnInit, OnDestroy  {\n  title = 'ng crm';\n  user: any = null;\n  isMobile: boolean = false;\n  mode = \"side\"\n  uiContent = \"content\"\n  progrssBarClass = \"progress-bar\";\n  isloading = true;\n   isadmin=false;\n  isMenuVisible=false;\n  \n\n  constructor(\n    // private loadingBar: SlimLoadingBarService,\n    private route: Router,\n   \n    private breakpointObserver: BreakpointObserver\n  )\n   {\n    console.log(\" constructor\")\n\n    this.isloading = true;\n\n    breakpointObserver.observe([\n      Breakpoints.HandsetLandscape,\n      Breakpoints.HandsetPortrait\n    ]).subscribe(result => {\n      console.log(result)\n      if (result.matches) {\n        // this.activateHandsetLayout();\n        this.isMobile = true;\n        this.mode = \"over\"\n        this.uiContent = \"mobile-content\"\n      }\n      else {\n        this.isMobile = false;\n        this.mode = \"side\"\n        this.uiContent = \"content\"\n      }\n    });\n\n    // this.route.events.subscribe((event: Event) => {\n    //   this.navigationInterceptor(event);\n    // })\n    //   ;\n  }\n\n  ngOnChanges() {\n    console.log(\" ngOnChanges\")\n  }\n\n\n  ngOnInit(): void {\n    console.log(\" ngOnInit\")\n   \n    this.isloading = false;\n  }\n\n  logout(): void {\n    // localStorage.removeItem('currentUser');\n    \n    this.route.navigate(['login']);\n  }\n\n\n\n  isAuth(isAuth?: any) {\n    if (isAuth) {\n     \n      // this.user = JSON.parse(localStorage.getItem(APP_USER_PROFILE)) || <User>{};\n    }\n  }\n\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this. progrssBarClass = \"progress-bar\";\n      this.isloading = true;\n    }\n    if (event instanceof NavigationEnd) {\n      this. progrssBarClass = \"progress-bar-hidden\";\n      this.isloading = false;\n    }\n    if (event instanceof NavigationCancel) {\n      this. progrssBarClass = \"progress-bar-hidden\";\n      this.isloading = false;\n    }\n    if (event instanceof NavigationError) {\n      this. progrssBarClass = \"progress-bar-hidden\";\n      this.isloading = false;\n    }\n\n  }\n\n\n  ngOnDestroy() {\n    this.breakpointObserver.ngOnDestroy()\n    \n    //   this.router.events\n    // this.breakpoint.\n  }\n  ngDoCheck(): void {\n    let currentroute = this.route.url;\n    let role=sessionStorage.getItem('role');\n    if (currentroute == '/login' || currentroute == '/register') {\n      this.isMenuVisible = false\n    } else {\n      this.isMenuVisible = true\n    }\n\n    if (role == 'admin') {\n      this.isadmin = true;\n    }else{\n      this.isadmin = false;\n    }\n  }\n\n \n}\n"]}