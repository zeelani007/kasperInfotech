{"version":3,"sources":["auth.service.ts"],"names":[],"mappings":"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","file":"auth.service.js","sourcesContent":["import { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { Constant } from './../constant/constant';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private _loginUrl = Constant.API_ENDPOINT + '/oauth/token';\r\n  private _client_id = 'demo-client';\r\n  private _client_secret = 'demo-secret';\r\n\r\n  private tokenHeader = {\r\n    'Authorization': 'Basic ' + btoa(this._client_id + ':' + this._client_secret),\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  };\r\n\r\n  constructor(private http: HttpClient, private _router: Router) { }\r\n\r\n  // convert to form data\r\n  getFormUrlEncoded(toConvert) {\r\n    const formBody = [];\r\n    // tslint:disable-next-line:forin\r\n    for (const property in toConvert) {\r\n      const encodedKey = encodeURIComponent(property);\r\n      const encodedValue = encodeURIComponent(toConvert[property]);\r\n      formBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n    return formBody.join('&');\r\n  }\r\n\r\n  errorHandler(error: any) {\r\n    console.log('Auth Service api error ', error);\r\n    return throwError(error);\r\n  }\r\n\r\n  loginUser(user) {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('access_token');\r\n\r\n    const data = {\r\n      'username': user.username,\r\n      'password': user.password,\r\n      'grant_type': 'password'\r\n    };\r\n\r\n    return this.http.post<any>(this._loginUrl, this.getFormUrlEncoded(data), { headers: this.tokenHeader });\r\n  }\r\n\r\n  refreshToken(request: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    if (localStorage.getItem('refreshToken') != null) {\r\n      this.callRefreshToken()\r\n        .subscribe(res => {\r\n          // console.log('Token retrieve successful', res);\r\n          localStorage.setItem('token', res.access_token);\r\n          localStorage.setItem('refreshToken', res.refresh_token);\r\n          next.handle(request);\r\n          location.reload();\r\n        },\r\n          err => {\r\n            // console.log('refresh token also results into error ', err);\r\n            this.logout();\r\n          });\r\n    } else {\r\n      // console.log(\"Cant use Refresh token\");\r\n      this._router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  callRefreshToken(): Observable<any> {\r\n    localStorage.removeItem('token');\r\n    // console.log(\"refresh token called \", localStorage.getItem(\"refreshToken\"));\r\n\r\n    const data = {\r\n      'grant_type': 'refresh_token',\r\n      'client_id': this._client_id,\r\n      'client_secret': this._client_secret,\r\n      'refresh_token': localStorage.getItem('refreshToken')\r\n    };\r\n\r\n    return this.http.post<any>(this._loginUrl, this.getFormUrlEncoded(data), { headers: this.tokenHeader })\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  isLoggedIn() {\r\n    // console.log(\"is Logged In \", !!localStorage.getItem(\"token\"));\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  isAdmin() {\r\n    return localStorage.getItem('role') === 'ROLE_ADMIN';\r\n  }\r\n\r\n  logout() {\r\n    // console.log(\"Logged Out called\");\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('role');\r\n    localStorage.clear();\r\n    this._router.navigate(['/']);\r\n    // location.reload();\r\n  }\r\n\r\n}\r\n"]}