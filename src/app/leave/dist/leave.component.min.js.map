{"version":3,"sources":["leave.component.ts"],"names":["forms_1","require","core_1","table_1","paginator_1","sort_1","LeaveComponent","builder","service","router","dialog","toastr","this","displayedColumns","registerform","group","id","control","Validators","compose","required","minLength","name","email","gender","fromdate","todate","reason","role","isactive","LoadUser","prototype","ngAfterViewInit","_this","Getall","subscribe","res","userlist","dataSource","MatTableDataSource","paginator","sort","updateuser","code","OpenDialog","enteranimation","exitanimation","open","LeaveComponent_1","enterAnimationDuration","exitAnimationDuration","width","data","usercode","afterClosed","proceedregister","valid","RegisterUser","value","result","success","warning","__decorate","ViewChild","MatPaginator","MatSort","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YACA,IAAAA,QAAAC,QAAA,kBAIAC,OAAAD,QAAA,iBAEAE,QAAAF,QAAA,2BACAG,YAAAH,QAAA,+BACAI,OAAAJ,QAAA,0BAUAK,eAAA,WAEE,SAAAA,EAAoBC,EAA8BC,EAA8BC,EAAuBC,EAC7FC,GADUC,KAAAL,QAAAA,EAA8BK,KAAAJ,QAAAA,EAA8BI,KAAAH,OAAAA,EAAuBG,KAAAF,OAAAA,EAC7FE,KAAAD,OAAAA,EAsBVC,KAAAC,iBAA6B,CAAC,WAAW,OAAO,OAAO,KAAK,SAAU,QAqBtED,KAAAE,aAAeF,KAAKL,QAAQQ,MAAM,CAChCC,GAAIJ,KAAKL,QAAQU,QAAQ,GAAIjB,QAAAkB,WAAWC,QAAQ,CAACnB,QAAAkB,WAAWE,SAAUpB,QAAAkB,WAAWG,UAAU,MAC3FC,KAAMV,KAAKL,QAAQU,QAAQ,GAAIjB,QAAAkB,WAAWE,UAE1CG,MAAOX,KAAKL,QAAQU,QAAQ,GAAIjB,QAAAkB,WAAWC,QAAQ,CAACnB,QAAAkB,WAAWE,SAAUpB,QAAAkB,WAAWK,SACpFC,OAAQZ,KAAKL,QAAQU,QAAQ,QAC7BQ,SAAUb,KAAKL,QAAQU,QAAQ,IAC/BS,OAAQd,KAAKL,QAAQU,QAAQ,IAC7BU,OAAQf,KAAKL,QAAQU,QAAQ,IAE7BW,KAAMhB,KAAKL,QAAQU,QAAQ,IAC3BY,SAAUjB,KAAKL,QAAQU,SAAQ,KAnD7BL,KAAKkB,iBAgEX,SAtEaxB,GAcXyB,UAAAC,gBAAA,aAGA1B,EAAAyB,UAAAD,SAAA,WAAA,IAAAG,EAAArB,KACEA,KAAKJ,QAAQ0B,SAASC,UAAU,SAAAC,GAC9BH,EAAKI,SAAWD,EAChBH,EAAKK,WAAa,IAAInC,QAAAoC,mBAAmBN,EAAKI,UAC9CJ,EAAKK,WAAWE,UAAYP,EAAKO,UACjCP,EAAKK,WAAWG,KAAOR,EAAKQ,QAKhCnC,EAAAyB,UAAAW,WAAA,SAAWC,GACT/B,KAAKgC,WAAW,SAAU,QAASD,IAGrCrC,EAAAyB,UAAAa,WAAA,SAAWC,EAAqBC,EAAoBH,GAApD,IAAAV,EAAArB,KACgBA,KAAKF,OAAOqC,KAAKC,EAAgB,CAC7CC,uBAAwBJ,EACxBK,sBAAuBJ,EACvBK,MAAO,MACPC,KAAM,CACJC,SAAUV,KAGRW,cAAcnB,UAAU,SAAAC,GAC5BH,EAAKH,cAkBTxB,EAAAyB,UAAAwB,gBAAA,WAAA,IAAAtB,EAAArB,KACMA,KAAKE,aAAa0C,MACpB5C,KAAKJ,QAAQiD,aAAa7C,KAAKE,aAAa4C,OAAOvB,UAAU,SAAAwB,GAC3D1B,EAAKtB,OAAOiD,QAAQ,4BAA4B,0BAIlDhD,KAAKD,OAAOkD,QAAQ,6BAvDCC,WAAA,CAAxB5D,OAAA6D,UAAU3D,YAAA4D,wCACSF,WAAA,CAAnB5D,OAAA6D,UAAU1D,OAAA4D,8BAZA3D,EAAc0C,EAAAc,WAAA,CAL1B5D,OAAAgE,UAAU,CACTC,SAAU,YACVC,YAAa,yBACbC,UAAW,CAAC,4BAED/D,GAAb,GAAagE,QAAAhE,eAAAA","file":"leave.component.min.js","sourcesContent":["\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../leave/auth.services';\nimport { ToastrService } from 'ngx-toastr'\nimport { AfterViewInit, Component, ViewChild } from '@angular/core';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n\n@Component({\n  selector: 'app-leave',\n  templateUrl: './leave.component.html',\n  styleUrls: ['./leave.component.css']\n})\nexport class LeaveComponent {\n\n  constructor(private builder: FormBuilder, private service: AuthService, private router: Router,private dialog: MatDialog,\n    private toastr: ToastrService)\n    \n    {\n      this.LoadUser();\n\n  }\n  userlist: any;\n  dataSource: any;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngAfterViewInit(): void {\n\n  }\n  LoadUser() {\n    this.service.Getall().subscribe(res => {\n      this.userlist = res;\n      this.dataSource = new MatTableDataSource(this.userlist);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  displayedColumns: string[] = ['username','name','from','to','reason', 'role'];\n\n  updateuser(code: any) {\n    this.OpenDialog('1000ms', '600ms', code);\n  }\n\n  OpenDialog(enteranimation: any, exitanimation: any, code: string) {\n    const popup = this.dialog.open(LeaveComponent, {\n      enterAnimationDuration: enteranimation,\n      exitAnimationDuration: exitanimation,\n      width: '30%',\n      data: {\n        usercode: code\n      }\n    });\n    popup.afterClosed().subscribe(res => {\n      this.LoadUser();\n    });\n  }\n\n\n  registerform = this.builder.group({\n    id: this.builder.control('', Validators.compose([Validators.required, Validators.minLength(4)])),\n    name: this.builder.control('', Validators.required),\n    // password: this.builder.control('', Validators.compose([Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')])),\n    email: this.builder.control('', Validators.compose([Validators.required, Validators.email])),\n    gender: this.builder.control('male'),\n    fromdate: this.builder.control(''),\n    todate: this.builder.control(''),\n    reason: this.builder.control(''),\n\n    role: this.builder.control(''),\n    isactive: this.builder.control(false)\n  });\n  proceedregister() {\n    if (this.registerform.valid) {\n      this.service.RegisterUser(this.registerform.value).subscribe(result => {\n        this.toastr.success('Please Wait For Approval.','Request successfully')\n        // this.router.navigate(['login'])\n      });\n    } else {\n      this.toastr.warning('Please enter valid data.')\n    }\n  }\n\n}\n"]}