{"version":3,"sources":["cart.services.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,6BAAuC;AAKvC;IAME;QAJO,iBAAY,GAAQ,EAAE,CAAA;QACtB,gBAAW,GAAG,IAAI,sBAAe,CAAM,EAAE,CAAC,CAAC;QAC3C,WAAM,GAAG,IAAI,sBAAe,CAAS,EAAE,CAAC,CAAC;IAEhC,CAAC;IACjB,iCAAW,GAAX;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED,gCAAU,GAAV,UAAW,OAAa;;QACtB,CAAA,KAAA,IAAI,CAAC,YAAY,CAAA,CAAC,IAAI,WAAI,OAAO,EAAE;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IACD,+BAAS,GAAT,UAAU,OAAa;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;IAChC,CAAC;IACD,mCAAa,GAAb;QACE,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,CAAK;YAC1B,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC;QACxB,CAAC,CAAC,CAAA;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;IACD,oCAAc,GAAd,UAAe,OAAY;QAA3B,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,CAAK,EAAE,KAAS;YACrC,IAAG,OAAO,CAAC,EAAE,KAAI,CAAC,CAAC,EAAE,EAAC;gBACpB,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IACD,mCAAa,GAAb;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IAvCU,WAAW;QAHvB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,WAAW,CAwCvB;IAAD,kBAAC;CAxCD,AAwCC,IAAA;AAxCY,kCAAW","file":"cart.services.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  public cartItemList : any =[]\r\n  public productList = new BehaviorSubject<any>([]);\r\n  public search = new BehaviorSubject<string>(\"\");\r\n\r\n  constructor() { }\r\n  getProducts(){\r\n    return this.productList.asObservable();\r\n  }\r\n\r\n  setProduct(product : any){\r\n    this.cartItemList.push(...product);\r\n    this.productList.next(product);\r\n  }\r\n  addtoCart(product : any){\r\n    this.cartItemList.push(product);\r\n    this.productList.next(this.cartItemList);\r\n    this.getTotalPrice();\r\n    console.log(this.cartItemList)\r\n  }\r\n  getTotalPrice() : number{\r\n    let grandTotal = 0;\r\n    this.cartItemList.map((a:any)=>{\r\n      grandTotal += a.total;\r\n    })\r\n    return grandTotal;\r\n  }\r\n  removeCartItem(product: any){\r\n    this.cartItemList.map((a:any, index:any)=>{\r\n      if(product.id=== a.id){\r\n        this.cartItemList.splice(index,1);\r\n      }\r\n    })\r\n    this.productList.next(this.cartItemList);\r\n  }\r\n  removeAllCart(){\r\n    this.cartItemList = []\r\n    this.productList.next(this.cartItemList);\r\n  }\r\n}\r\n"]}