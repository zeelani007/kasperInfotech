{"version":3,"sources":["cart.services.ts"],"names":["core_1","require","rxjs_1","CartService","this","cartItemList","productList","BehaviorSubject","search","prototype","getProducts","asObservable","setProduct","product","_a","push","apply","next","addtoCart","getTotalPrice","console","log","grandTotal","map","a","total","removeCartItem","_this","index","id","splice","removeAllCart","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,QAKAE,YAAA,WAME,SAAAA,IAJOC,KAAAC,aAAoB,GACpBD,KAAAE,YAAc,IAAIJ,OAAAK,gBAAqB,IACvCH,KAAAI,OAAS,IAAIN,OAAAK,gBAAwB,IAoC9C,OAjCEJ,EAAAM,UAAAC,YAAA,WACE,OAAON,KAAKE,YAAYK,gBAG1BR,EAAAM,UAAAG,WAAA,SAAWC,UACTC,EAAAV,KAAKC,cAAaU,KAAIC,MAAAF,EAAID,GAC1BT,KAAKE,YAAYW,KAAKJ,IAExBV,EAAAM,UAAAS,UAAA,SAAUL,GACRT,KAAKC,aAAaU,KAAKF,GACvBT,KAAKE,YAAYW,KAAKb,KAAKC,cAC3BD,KAAKe,gBACLC,QAAQC,IAAIjB,KAAKC,eAEnBF,EAAAM,UAAAU,cAAA,WACE,IAAIG,EAAa,EAIjB,OAHAlB,KAAKC,aAAakB,IAAI,SAACC,GACrBF,GAAcE,EAAEC,QAEXH,GAETnB,EAAAM,UAAAiB,eAAA,SAAeb,GAAf,IAAAc,EAAAvB,KACEA,KAAKC,aAAakB,IAAI,SAACC,EAAOI,GACzBf,EAAQgB,KAAML,EAAEK,IACjBF,EAAKtB,aAAayB,OAAOF,EAAM,KAGnCxB,KAAKE,YAAYW,KAAKb,KAAKC,eAE7BF,EAAAM,UAAAsB,cAAA,WACE3B,KAAKC,aAAe,GACpBD,KAAKE,YAAYW,KAAKb,KAAKC,eAtClBF,EAAW6B,WAAA,CAHvBhC,OAAAiC,WAAW,CACVC,WAAY,UAED/B,GAAb,GAAagC,QAAAhC,YAAAA","file":"cart.services.min.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  public cartItemList : any =[]\r\n  public productList = new BehaviorSubject<any>([]);\r\n  public search = new BehaviorSubject<string>(\"\");\r\n\r\n  constructor() { }\r\n  getProducts(){\r\n    return this.productList.asObservable();\r\n  }\r\n\r\n  setProduct(product : any){\r\n    this.cartItemList.push(...product);\r\n    this.productList.next(product);\r\n  }\r\n  addtoCart(product : any){\r\n    this.cartItemList.push(product);\r\n    this.productList.next(this.cartItemList);\r\n    this.getTotalPrice();\r\n    console.log(this.cartItemList)\r\n  }\r\n  getTotalPrice() : number{\r\n    let grandTotal = 0;\r\n    this.cartItemList.map((a:any)=>{\r\n      grandTotal += a.total;\r\n    })\r\n    return grandTotal;\r\n  }\r\n  removeCartItem(product: any){\r\n    this.cartItemList.map((a:any, index:any)=>{\r\n      if(product.id=== a.id){\r\n        this.cartItemList.splice(index,1);\r\n      }\r\n    })\r\n    this.productList.next(this.cartItemList);\r\n  }\r\n  removeAllCart(){\r\n    this.cartItemList = []\r\n    this.productList.next(this.cartItemList);\r\n  }\r\n}\r\n"]}