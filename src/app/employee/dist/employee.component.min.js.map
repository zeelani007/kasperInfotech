{"version":3,"sources":["employee.component.ts"],"names":["core_1","require","EmployeeComponent","fb","employeeService","this","educationOptions","employeeForm","group","employees","employeesToDisplay","prototype","ngOnInit","_this","firstname","control","lastname","birthday","gender","education","company","jobExperience","salary","getEmployees","subscribe","res","_i","res_1","length","emp","unshift","ngAfterViewInit","addEmployee","employee","FirstName","value","LastName","birthdate","BirthDay","Gender","parseInt","Education","Company","JobExperience","Salary","profile","_a","fileInput","nativeElement","files","name","postEmployee","clearForm","removeEmployee","event","forEach","val","index","id","deleteEmployee","splice","editEmployee","ind","setForm","addEmployeeButton","click","setValue","educationIndex","searchEmployees","filteredEmployees","filter","targetKey","toLowerCase","searchKey","includes","Object","defineProperty","get","__decorate","ViewChild","Component","selector","templateUrl","styleUrls","exports"],"mappings":"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","file":"employee.component.min.js","sourcesContent":["\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Employee } from '../model/employee.model';\nimport { EmployeeService } from '../employee/employee.service';\n\n\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit, AfterViewInit {\n  @ViewChild('fileInput') fileInput: any;\n  @ViewChild('addEmployeeButton') addEmployeeButton: any;\n \n\n  employeeForm: FormGroup;\n\n  employees: Employee[];\n  employeesToDisplay: Employee[];\n  educationOptions = [\n    '10th pass',\n    'diploma',\n    'graduate',\n    'post graduate',\n    'PhD',\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private employeeService: EmployeeService\n  ) {\n    this.employeeForm = fb.group({});\n    this.employees = [];\n    this.employeesToDisplay = this.employees;\n  }\n\n  ngOnInit(): void {\n    this.employeeForm = this.fb.group({\n      firstname: this.fb.control(''),\n      lastname: this.fb.control(''),\n      birthday: this.fb.control(''),\n      gender: this.fb.control(''),\n      education: this.fb.control('default'),\n      company: this.fb.control(''),\n      jobExperience: this.fb.control(''),\n      salary: this.fb.control(''),\n    });\n\n    this.employeeService.getEmployees().subscribe((res) => {\n      for (let emp of res) {\n        this.employees.unshift(emp);\n      }\n      this.employeesToDisplay = this.employees;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    //this.buttontemp.nativeElement.click();\n  }\n\n  addEmployee() {\n    let employee: Employee = {\n      firstname: this.FirstName.value,\n      lastname: this.LastName.value,\n      birthdate: this.BirthDay.value,\n      gender: this.Gender.value,\n      education: this.educationOptions[parseInt(this.Education.value)],\n      company: this.Company.value,\n      jobExperience: this.JobExperience.value,\n      salary: this.Salary.value,\n      profile: this.fileInput.nativeElement.files[0]?.name,\n    };\n    this.employeeService.postEmployee(employee).subscribe((res) => {\n      this.employees.unshift(res);\n      this.clearForm();\n    });\n  }\n\n  removeEmployee(event: any) {\n    this.employees.forEach((val, index) => {\n      if (val.id === parseInt(event)) {\n        this.employeeService.deleteEmployee(event).subscribe((res) => {\n          this.employees.splice(index, 1);\n        });\n      }\n    });\n  }\n\n  editEmployee(event: any) {\n    this.employees.forEach((val, ind) => {\n      if (val.id === event) {\n        this.setForm(val);\n      }\n    });\n    this.removeEmployee(event);\n    this.addEmployeeButton.nativeElement.click();\n  }\n\n  setForm(emp: Employee) {\n    this.FirstName.setValue(emp.firstname);\n    this.LastName.setValue(emp.lastname);\n    this.BirthDay.setValue(emp.birthdate);\n    this.Gender.setValue(emp.gender);\n\n    let educationIndex = 0;\n    this.educationOptions.forEach((val, index) => {\n      if (val === emp.education) educationIndex = index;\n    });\n    this.Education.setValue(educationIndex);\n\n    this.Company.setValue(emp.company);\n    this.JobExperience.setValue(emp.jobExperience);\n    this.Salary.setValue(emp.salary);\n    this.fileInput.nativeElement.value = '';\n  }\n\n  searchEmployees(event: any) {\n    let filteredEmployees: Employee[] = [];\n\n    if (event === '') {\n      this.employeesToDisplay = this.employees;\n    } else {\n      filteredEmployees = this.employees.filter((val, index) => {\n        let targetKey = val.firstname.toLowerCase() + '' + val.lastname.toLowerCase();\n        let searchKey = event.toLowerCase();\n        return targetKey.includes(searchKey);\n      });\n      this.employeesToDisplay = filteredEmployees;\n    }\n  }\n\n  clearForm() {\n    this.FirstName.setValue('');\n    this.LastName.setValue('');\n    this.BirthDay.setValue('');\n    this.Gender.setValue('');\n    this.Education.setValue('');\n    this.Company.setValue('');\n    this.JobExperience.setValue('');\n    this.Salary.setValue('');\n    this.fileInput.nativeElement.value = '';\n  }\n\n  public get FirstName(): FormControl {\n    return this.employeeForm.get('firstname') as FormControl;\n  }\n  public get LastName(): FormControl {\n    return this.employeeForm.get('lastname') as FormControl;\n  }\n  public get BirthDay(): FormControl {\n    return this.employeeForm.get('birthday') as FormControl;\n  }\n  public get Gender(): FormControl {\n    return this.employeeForm.get('gender') as FormControl;\n  }\n  public get Education(): FormControl {\n    return this.employeeForm.get('education') as FormControl;\n  }\n  public get Company(): FormControl {\n    return this.employeeForm.get('company') as FormControl;\n  }\n  public get JobExperience(): FormControl {\n    return this.employeeForm.get('jobExperience') as FormControl;\n  }\n  public get Salary(): FormControl {\n    return this.employeeForm.get('salary') as FormControl;\n  }\n// \n\n}\n"]}